---
name: Deploy Process-Video

on:
  push:
    branches:
      - main

env:
  ECR_REPOSITORY: spv/process-video
  AWS_REGION: ${{ vars.AWS_REGION }}
  EKS_CLUSTER_NAME: ${{ vars.EKS_CLUSTER_NAME }}

permissions:
    id-token: write
    contents: write
    packages: write
    attestations: write

jobs:
  maven-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Run maven Test
        run: mvn test

  build:
    name: Build APP
    runs-on: ubuntu-latest
    outputs:
      version_image: ${{ steps.increment_git_tag.outputs.stdout }}
    needs: maven-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Build the App
        run: mvn clean install

      - name: Config AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::857378965163:role/github-actions

      - name: Login to Amazon ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'

      - name: Automatic Tagging of Releases
        id: increment_git_tag
        run: |
          #bash ./devops/git_update.sh -v patch
          # run in subshell, capturiing stdout to var
          SCRIPT_OUTPUT=$(./devops/git_update.sh -v patch)

      - name: Build, tag, and push image to Amazon ECR
        id: build_image
        env:
          IMAGE_RELEASE: ${{ steps.increment_git_tag.outputs.stdout }}
          ECR_REGISTRY:  ${{ steps.login_ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: |
          echo "Deploy Version: $IMAGE_RELEASE"
          echo "Repository Autenticate: $ECR_REGISTRY"
          docker build --no-cache --progress=plain -f devops/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_RELEASE .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_RELEASE $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_RELEASE
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy EKS
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - env:
          IMG_RELEASE: ${{ needs.build.outputs.version_image }}
        run: echo "ECR_REPOSITORY = $ECR_REPOSITORY -- IMAGE_RELEASE = $IMG_RELEASE"

      - name: Config AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::857378965163:role/github-actions

      - name: Replace single file
        uses: richardrigutins/replace-in-files@v2
        with:
          files: 'k8s/app/video-deployment.yaml'
          search-text: 'IMAGE_VERSION'
          replacement-text: "$IMG_RELEASE"

      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Deploy to APP EKS
        run: |
          echo "Deploy Version: $IMAGE_RELEASE"
          echo "Repository Autenticate: $ECR_REGISTRY"
          kubectl apply -f k8s/namespace.yml
          kubectl apply -f k8s/app/video-service.yaml
          kubectl apply -f k8s/app/video-deployment.yaml
          kubectl apply -f k8s/app/video-hpa.yaml
